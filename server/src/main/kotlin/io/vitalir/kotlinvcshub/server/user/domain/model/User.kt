package io.vitalir.kotlinvcshub.server.user.domain.model

import io.vitalir.kotlinvcshub.server.repository.domain.model.Repository
import io.vitalir.kotlinvcshub.server.user.domain.password.PasswordManager

data class User(
    val id: UserId,
    val login: String,
    val password: String,
    val firstName: String? = null,
    val lastName: String? = null,
    val email: String? = null,
    val repositories: List<Repository> = emptyList(),
) {
    /**
     * Used in tests e.g. [io.vitalir.kotlinvschub.server.user.domain.extensionsKt]
     */
    companion object {
        private const val AUTOGENERATED_ID = 0

        fun fromCredentials(
            credentials: UserCredentials,
            passwordManager: PasswordManager,
        ): User {
            val (login, email) = credentials.identifier.userIdentifiers
            return User(
                id = AUTOGENERATED_ID,
                login = login,
                password = passwordManager.encode(credentials.password),
                email = email,
            )
        }

        private data class UserIdentifiers(
            val login: String,
            val email: String? = null,
        )

        private val UserCredentials.Identifier.userIdentifiers: UserIdentifiers
            get() = when (this) {
                is UserCredentials.Identifier.Email -> UserIdentifiers(login = this.value, email = this.value)
                is UserCredentials.Identifier.Login -> UserIdentifiers(login = this.value)
            }
    }
}
